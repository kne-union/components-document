{"version":3,"file":"static/js/972.7cc66ac2.chunk.js","mappings":"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","sources":["../node_modules/markdown-it-mathjax/markdown-it-mathjax.js"],"sourcesContent":[";(function (root, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory()\n  } else {\n    root.markdownitMathjax = factory()\n  }\n})(this, function () {\n  function math (state, silent) {\n    var startMathPos = state.pos\n    if (state.src.charCodeAt(startMathPos) !== 0x5C /* \\ */) {\n      return false\n    }\n    var match = state.src.slice(++startMathPos).match(/^(?:\\\\\\[|\\\\\\(|begin\\{([^}]*)\\})/)\n    if (!match) {\n      return false\n    }\n    startMathPos += match[0].length\n    var type, endMarker, includeMarkers\n    if (match[0] === '\\\\[') {\n      type = 'display_math'\n      endMarker = '\\\\\\\\]'\n    } else if (match[0] === '\\\\(') {\n      type = 'inline_math'\n      endMarker = '\\\\\\\\)'\n    } else if (match[1]) {\n      type = 'math'\n      endMarker = '\\\\end{' + match[1] + '}'\n      includeMarkers = true\n    }\n    var endMarkerPos = state.src.indexOf(endMarker, startMathPos)\n    if (endMarkerPos === -1) {\n      return false\n    }\n    var nextPos = endMarkerPos + endMarker.length\n    if (!silent) {\n      var token = state.push(type, '', 0)\n      token.content = includeMarkers\n        ? state.src.slice(state.pos, nextPos)\n        : state.src.slice(startMathPos, endMarkerPos)\n    }\n    state.pos = nextPos\n    return true\n  }\n\n  function texMath (state, silent) {\n    var startMathPos = state.pos\n    if (state.src.charCodeAt(startMathPos) !== 0x24 /* $ */) {\n      return false\n    }\n\n    // Parse tex math according to http://pandoc.org/README.html#math\n    var endMarker = '$'\n    var afterStartMarker = state.src.charCodeAt(++startMathPos)\n    if (afterStartMarker === 0x24 /* $ */) {\n      endMarker = '$$'\n      if (state.src.charCodeAt(++startMathPos) === 0x24 /* $ */) {\n        // 3 markers are too much\n        return false\n      }\n    } else {\n      // Skip if opening $ is succeeded by a space character\n      if (afterStartMarker === 0x20 /* space */ || afterStartMarker === 0x09 /* \\t */ || afterStartMarker === 0x0a /* \\n */) {\n        return false\n      }\n    }\n    var endMarkerPos = state.src.indexOf(endMarker, startMathPos)\n    if (endMarkerPos === -1) {\n      return false\n    }\n    if (state.src.charCodeAt(endMarkerPos - 1) === 0x5C /* \\ */) {\n      return false\n    }\n    var nextPos = endMarkerPos + endMarker.length\n    if (endMarker.length === 1) {\n      // Skip if $ is preceded by a space character\n      var beforeEndMarker = state.src.charCodeAt(endMarkerPos - 1)\n      if (beforeEndMarker === 0x20 /* space */ || beforeEndMarker === 0x09 /* \\t */ || beforeEndMarker === 0x0a /* \\n */) {\n        return false\n      }\n      // Skip if closing $ is succeeded by a digit (eg $5 $10 ...)\n      var suffix = state.src.charCodeAt(nextPos)\n      if (suffix >= 0x30 && suffix < 0x3A) {\n        return false\n      }\n    }\n\n    if (!silent) {\n      var token = state.push(endMarker.length === 1 ? 'inline_math' : 'display_math', '', 0)\n      token.content = state.src.slice(startMathPos, endMarkerPos)\n    }\n    state.pos = nextPos\n    return true\n  }\n\n  function escapeHtml (html) {\n    return html.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ')\n  }\n\n  function extend (options, defaults) {\n    return Object.keys(defaults).reduce(function (result, key) {\n      if (result[key] === undefined) {\n        result[key] = defaults[key]\n      }\n      return result\n    }, options)\n  }\n\n  var mapping = {\n    'math': 'Math',\n    'inline_math': 'InlineMath',\n    'display_math': 'DisplayMath'\n  }\n\n  return function (options) {\n    var defaults = {\n      beforeMath: '',\n      afterMath: '',\n      beforeInlineMath: '\\\\(',\n      afterInlineMath: '\\\\)',\n      beforeDisplayMath: '\\\\[',\n      afterDisplayMath: '\\\\]'\n    }\n    options = extend(options || {}, defaults)\n\n    return function (md) {\n      md.inline.ruler.before('escape', 'math', math)\n      md.inline.ruler.push('texMath', texMath)\n\n      Object.keys(mapping).forEach(function (key) {\n        var before = options['before' + mapping[key]]\n        var after = options['after' + mapping[key]]\n        md.renderer.rules[key] = function (tokens, idx) {\n          return before + escapeHtml(tokens[idx].content) + after\n        }\n      })\n    }\n  }\n})\n"],"names":["module","exports","math","state","silent","startMathPos","pos","src","charCodeAt","type","endMarker","includeMarkers","match","slice","length","endMarkerPos","indexOf","nextPos","push","content","texMath","afterStartMarker","beforeEndMarker","suffix","escapeHtml","html","replace","extend","options","defaults","Object","keys","reduce","result","key","undefined","mapping","beforeMath","afterMath","beforeInlineMath","afterInlineMath","beforeDisplayMath","afterDisplayMath","md","inline","ruler","before","forEach","after","renderer","rules","tokens","idx","factory"],"sourceRoot":""}